library IEEE;
use IEEE.NUMERIC_BIT.All;

-- Component that will generate the needed signals to use the VGA port.
-- This will generate the Horizontal Signal (HS), and the column, the Vertical Signal (VS),
-- and the row and the signal VideoOn.
-- This component uses the signal generated by the HorizontalSignal component. 
-- This one needs a CLK input at 50MHz.
entity VGADriver is
	port(
        CLK: in bit;
		HS: out bit; 
        COLUM: out bit_vector(9 downto 0);    
        VS: out bit; ROW: out bit_vector(9 downto 0); 
        VIDEO_ON: out bit
    );
end entity;

architecture VGADriverarchi of VGADriver is

component HorizontalSignal
	port(CLK: in bit; 
		HS, HS_ON: out bit; COLUM: out bit_vector(9 downto 0));
end component;
component FFT
	port(CLK, T: in bit;
		Q: buffer bit);
end component;

signal ROWint: integer range 0 to 520:= 0;
signal HSin: bit; -- Helper signal to be able to read it.
signal HS_ON, VS_ON, CLK25mhz: bit;
signal COLUMin: bit_vector(9 downto 0);


begin

	-- Horizontal Signal generation.
	horizontal: HorizontalSignal port map(CLK, HSin, HS_ON, COLUMin);
	HS<= HSin;
	COLUM<= COLUMin;
	
	-- Internal CLK at 25MHz.
	CLK25: FFT port map(CLK, '1', CLK25mhz);
	
	
	-- Row Counter: Each vertical is a row.
	process(CLK25mhz)
	begin
		if CLK25mhz'event and CLK25mhz='1' then
			if COLUMin="1100011111" then	
                -- The last column.
				if ROWint=520 then
					ROWint<= 0;
				else 
					ROWint<= ROWint+1;
				end if;
			end if;
		end if;
	end process;
	
	
	ROW<= bit_vector(to_unsigned(ROWint, 10));
	
	VS<= '1' when ROWint>=2 else '0';
	
	VS_ON<= '1' when ROWint>=31 and ROWint<511 else '0';
	
	
	VIDEO_ON<= HS_ON and VS_ON;
	
end architecture;
